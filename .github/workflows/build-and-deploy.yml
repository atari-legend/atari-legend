name: Build
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: PHP Lint
        run: ./vendor/bin/phplint ./ --exclude=vendor

      - name: Run tests
        run: php artisan test

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache node_modules/
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Install NPM dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run prod

      - name: Production optimizations
        if: github.ref == 'refs/heads/master'
        # Clear all caches, they will be rebuilt on the host
        run: |
          php artisan cache:clear
          php artisan config:clear
          php artisan optimize:clear
          php artisan route:clear
          php artisan view:clear
          composer dump-autoload
          composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader

      - name: Deploy development
        if: github.ref == 'refs/heads/development'
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
          ./.github/workflows/deploy.sh "${{ secrets.PROD_DEPLOY_USER }}" "${{ secrets.PROD_DEPLOY_HOST }}" "dev.atarilegend.com" "legacydev.atarilegend.com"

      # Example of deploying a custom feature branch on a test site,
      # without a legacy CPANEL
      #
      # - name: Deploy prototype
      #   if: github.ref == 'refs/heads/prototype'
      #   run: |
      #     eval "$(ssh-agent -s)"
      #     ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
      #     ./.github/workflows/deploy.sh "${{ secrets.PROD_DEPLOY_USER }}" "${{ secrets.PROD_DEPLOY_HOST }}" "prototype.atarilegend.com"

      - name: Deploy production
        if: github.ref == 'refs/heads/master'
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.DEPLOY_SSH_KEY }}"
          ./.github/workflows/deploy.sh "${{ secrets.PROD_DEPLOY_USER }}" "${{ secrets.PROD_DEPLOY_HOST }}" "www.atarilegend.com" "legacy.atarilegend.com"
